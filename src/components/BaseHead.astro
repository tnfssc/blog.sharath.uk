---
import '@/global.css';

import fontRedHatDisplay from '@fontsource-variable/red-hat-display/files/red-hat-display-latin-wght-normal.woff2';
import fontRedHatMono from '@fontsource-variable/red-hat-mono/files/red-hat-mono-latin-wght-normal.woff2';
import fontRedHatText from '@fontsource-variable/red-hat-text/files/red-hat-text-latin-wght-normal.woff2';

interface Props {
  title: string;
  description: string;
  image: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/icon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Preload Fonts -->
<link rel="preload" href={new URL(fontRedHatDisplay, Astro.url)} as="font" type="font/woff2" crossorigin />
<link rel="preload" href={new URL(fontRedHatText, Astro.url)} as="font" type="font/woff2" crossorigin />
<link rel="preload" href={new URL(fontRedHatMono, Astro.url)} as="font" type="font/woff2" crossorigin />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script is:inline type="text/javascript">
  if (!window.location.hostname.includes('localhost')) {
    (function (c, l, a, r, i, t, y) {
      c[a] =
        c[a] ||
        function () {
          (c[a].q = c[a].q || []).push(arguments);
        };
      t = l.createElement(r);
      t.async = 1;
      t.src = 'https://www.clarity.ms/tag/' + i;
      y = l.getElementsByTagName(r)[0];
      y.parentNode.insertBefore(t, y);
    })(window, document, 'clarity', 'script', 'msp158w224');
  }
</script>
